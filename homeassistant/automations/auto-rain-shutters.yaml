alias: Rain-protected shutters
description: >-
  When weather.openweathermap reports rain, save and close selected shutters.
  When rain ends, restore them to their previous positions.
triggers:
  - entity_id: sensor.openweathermap_weather
    trigger: state
actions:
  - choose:
      - conditions:
          - condition: template
            value_template: |
              {{ trigger.to_state.state | lower 
                is match("^(?!light rain$).*(rain|storm|shower).*") }}
        sequence:
          - repeat:
              for_each: |
                {{ states.input_number
                   | map(attribute="entity_id")
                   | select("match", "^input_number\\..*_shutters_last_position$")
                   | list }}
              sequence:
                - data:
                    entity_id: "{{ repeat.item }}"
                    value: |
                      {{ state_attr(
                          'cover.' ~
                          repeat.item.split('.')[1]
                                     .replace('_last_position',''),
                          'current_position'
                        ) }}
                  action: input_number.set_value
          - target:
              entity_id: |
                {{ states.input_number
                   | map(attribute="entity_id")
                   | select("match", "^input_number\\..*_shutters_last_position$")
                   | map("regex_replace",
                        "^input_number\\.(.*)_last_position$",
                        "cover.\\1")
                   | list }}
            action: cover.close_cover
      - conditions:
          - condition: template
            value_template: |
              {{ 
                trigger.from_state.state | lower is match("^(?!light rain$).*(rain|storm).*")
                and trigger.to_state.state |lower is not match("^(?!light rain$).*(rain|storm).*")
              }}
        sequence:
          - repeat:
              for_each: |
                {{ states.input_number
                   | map(attribute="entity_id")
                   | select("match", "^input_number\\..*_shutters_last_position$")
                   | list }}
              sequence:
                - data:
                    entity_id: |
                      {{ 'cover.' ~
                         repeat.item.split('.')[1]
                                    .replace('_last_position','') }}
                    position: "{{ states(repeat.item)|int }}"
                  action: cover.set_cover_position
mode: single
